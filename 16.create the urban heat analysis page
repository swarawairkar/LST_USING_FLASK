{% extends "base.html" %}

{% block title %}Urban Heat Analysis - Landsat Data Analysis Dashboard{% endblock %}

{% block content %}
<div class="row">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h3>Urban Heat Island Analysis</h3>
            </div>
            <div class="card-body">
                <p>
                    Urban Heat Islands (UHIs) are urban areas that are significantly warmer than surrounding rural areas 
                    due to human activities, infrastructure, and modifications to the land surface. This analysis examines 
                    the urban heat island effect in major cities of Tamil Nadu.
                </p>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4>Parameters</h4>
            </div>
            <div class="card-body">
                <form id="parameters-form">
                    <div class="mb-3">
                        <label for="city" class="form-label">City</label>
                        <select class="form-select" id="city" name="city">
                            <option value="Chennai" selected>Chennai</option>
                            <option value="Coimbatore">Coimbatore</option>
                            <option value="Madurai">Madurai</option>
                            <option value="Tiruchirappalli">Tiruchirappalli</option>
                            <option value="Salem">Salem</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="year" class="form-label">Year</label>
                        <select class="form-select" id="year" name="year">
                            <option value="2018">2018</option>
                            <option value="2020">2020</option>
                            <option value="2024" selected>2024</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="month" class="form-label">Month</label>
                        <select class="form-select" id="month" name="month">
                            <option value="1">January</option>
                            <option value="2">February</option>
                            <option value="3">March</option>
                            <option value="4" selected>April</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">August</option>
                            <option value="9">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Time of Day</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="time_of_day" id="daytime" value="Daytime" checked>
                            <label class="form-check-label" for="daytime">Daytime</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="time_of_day" id="nighttime" value="Nighttime">
                            <label class="form-check-label" for="nighttime">Nighttime</label>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="analysis-type" class="form-label">Analysis Type</label>
                        <select class="form-select" id="analysis-type" name="analysis_type">
                            <option value="uhi-profile" selected>UHI Profile</option>
                            <option value="uhi-intensity">UHI Intensity</option>
                            <option value="landcover-impact">Land Cover Impact</option>
                            <option value="mitigation-strategies">Mitigation Strategies</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Update</button>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <!-- UHI Profile Analysis -->
        <div id="uhi-profile-container" class="analysis-container">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h4>Urban Heat Island Profile</h4>
                </div>
                <div class="card-body">
                    <div id="uhi-map-container" style="height: 400px;">
                        <!-- UHI map will be loaded here -->
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-12">
                            <h5>Urban-Rural Temperature Gradient</h5>
                            <div id="gradient-chart" style="height: 350px;"></div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header bg-info text-white">
                                    <h5>UHI Intensity</h5>
                                </div>
                                <div class="card-body">
                                    <div class="text-center mb-3">
                                        <div class="display-4 text-danger" id="uhi-intensity">3.4째C</div>
                                        <p class="text-muted">Max Urban-Rural Temperature Difference</p>
                                    </div>
                                    <div class="progress mb-2" style="height: 25px;">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: 20%">Weak (<2째C)</div>
                                        <div class="progress-bar bg-warning" role="progressbar" style="width: 40%">Moderate (2-4째C)</div>
                                        <div class="progress-bar bg-danger" role="progressbar" style="width: 40%">Strong (>4째C)</div>
                                    </div>
                                    <div class="text-center">
                                        <span class="badge rounded-pill bg-warning" id="uhi-category">Moderate</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header bg-info text-white">
                                    <h5>Key Characteristics</h5>
                                </div>
                                <div class="card-body">
                                    <ul id="uhi-characteristics">
                                        <li>Peak intensity in high-density commercial areas</li>
                                        <li>Stronger intensity during nighttime compared to daytime</li>
                                        <li>Coastal areas show reduced UHI effect</li>
                                        <li>Industrial zones exhibit elevated temperatures</li>
                                        <li>Urban parks create localized cooling islands</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- UHI Intensity Analysis -->
        <div id="uhi-intensity-container" class="analysis-container d-none">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h4>Urban Heat Island Intensity Analysis</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <h5>Temporal Variation of UHI Intensity</h5>
                            <div id="temporal-intensity-chart" style="height: 400px;"></div>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header bg-info text-white">
                                    <h5>Diurnal Pattern</h5>
                                </div>
                                <div class="card-body">
                                    <div id="diurnal-chart" style="height: 250px;"></div>
                                    <p class="mt-2">
                                        UHI intensity typically peaks after sunset when urban surfaces 
                                        release stored heat while rural areas cool more rapidly.
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header bg-info text-white">
                                    <h5>Seasonal Variation</h5>
                                </div>
                                <div class="card-body">
                                    <div id="seasonal-intensity-chart" style="height: 250px;"></div>
                                    <p class="mt-2">
                                        UHI intensity varies seasonally, with typically higher values during 
                                        summer months due to increased solar radiation and anthropogenic heat.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Land Cover Impact Analysis -->
        <div id="landcover-impact-container" class="analysis-container d-none">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h4>Land Cover Impact on Urban Heat</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <h5>Temperature by Land Cover Type</h5>
                            <div id="landcover-temp-chart" style="height: 400px;"></div>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header bg-info text-white">
                                    <h5>Surface Properties Impact</h5>
                                </div>
                                <div class="card-body">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Surface Type</th>
                                                <th>Albedo</th>
                                                <th>Thermal Capacity</th>
                                                <th>Temp. Impact</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>Concrete/Asphalt</td>
                                                <td>0.05-0.20</td>
                                                <td>High</td>
                                                <td><span class="text-danger">+3.0 to +7.0째C</span></td>
                                            </tr>
                                            <tr>
                                                <td>Buildings</td>
                                                <td>0.10-0.35</td>
                                                <td>Very High</td>
                                                <td><span class="text-danger">+2.5 to +6.0째C</span></td>
                                            </tr>
                                            <tr>
                                                <td>Urban Vegetation</td>
                                                <td>0.15-0.30</td>
                                                <td>Medium</td>
                                                <td><span class="text-success">-0.5 to -3.0째C</span></td>
                                            </tr>
                                            <tr>
                                                <td>Water Bodies</td>
                                                <td>0.05-0.10</td>
                                                <td>Very High</td>
                                                <td><span class="text-success">-1.0 to -5.0째C</span></td>
                                            </tr>
                                            <tr>
                                                <td>Open Soil</td>
                                                <td>0.20-0.40</td>
                                                <td>Low</td>
                                                <td><span class="text-warning">-0.5 to +1.5째C</span></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header bg-info text-white">
                                    <h5>Land Cover Correlation</h5>
                                </div>
                                <div class="card-body">
                                    <div id="landcover-correlation-chart" style="height: 300px;"></div>
                                    <p class="mt-2">
                                        Strong negative correlation between vegetation cover and temperature, 
                                        and strong positive correlation between impervious surfaces and temperature.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Mitigation Strategies Analysis -->
        <div id="mitigation-strategies-container" class="analysis-container d-none">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h4>Urban Heat Mitigation Strategies</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="alert alert-info">
                                <h5 class="alert-heading">Recommended Strategies for Selected City</h5>
                                <p id="city-specific-recommendations">
                                    Based on the analysis of Chennai's urban heat island profile, 
                                    the following mitigation strategies are recommended to reduce urban heat and improve 
                                    thermal comfort for residents.
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card mb-3">
                                <div class="card-header bg-success text-white">
                                    <h5>Green Infrastructure</h5>
                                </div>
                                <div class="card-body">
                                    <ul>
                                        <li>Increase urban tree cover along streets and in public spaces</li>
                                        <li>Develop new urban parks and green spaces in high-density areas</li>
                                        <li>Implement green roofs on public and commercial buildings</li>
                                        <li>Create green corridors connecting existing green spaces</li>
                                        <li>Promote vertical gardens on building facades</li>
                                    </ul>
                                    <div class="text-center mt-2">
                                        <div class="badge bg-success p-2">Estimated Cooling: 1.5-3.0째C</div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-3">
                                <div class="card-header bg-info text-white">
                                    <h5>Cool Materials</h5>
                                </div>
                                <div class="card-body">
                                    <ul>
                                        <li>Replace dark pavements with high-albedo materials</li>
                                        <li>Install cool roofs with high solar reflectance</li>
                                        <li>Use reflective coatings on existing surfaces</li>
                                        <li>Implement permeable pavements in parking lots</li>
                                        <li>Utilize cool-colored materials for building exteriors</li>
                                    </ul>
                                    <div class="text-center mt-2">
                                        <div class="badge bg-info p-2">Estimated Cooling: 1.0-2.5째C</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card mb-3">
                                <div class="card-header bg-primary text-white">
                                    <h5>Water Features</h5>
                                </div>
                                <div class="card-body">
                                    <ul>
                                        <li>Restore and enhance natural water bodies</li>
                                        <li>Create urban water features like fountains and ponds</li>
                                        <li>Implement rainwater harvesting and bioswales</li>
                                        <li>Design water-retention areas that serve multiple functions</li>
                                        <li>Install misting systems in public spaces during heat waves</li>
                                    </ul>
                                    <div class="text-center mt-2">
                                        <div class="badge bg-primary p-2">Estimated Cooling: 1.0-3.0째C</div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-3">
                                <div class="card-header bg-secondary text-white">
                                    <h5>Urban Planning & Policy</h5>
                                </div>
                                <div class="card-body">
                                    <ul>
                                        <li>Revise building codes to include heat mitigation measures</li>
                                        <li>Implement urban heat consideration in future development</li>
                                        <li>Create incentives for private green infrastructure</li>
                                        <li>Develop urban cooling centers for extreme heat events</li>
                                        <li>Establish minimum green space requirements for new developments</li>
                                    </ul>
                                    <div class="text-center mt-2">
                                        <div class="badge bg-secondary p-2">Long-term Systemic Impact</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header bg-warning text-dark">
                                    <h5>Cooling Potential by Strategy</h5>
                                </div>
                                <div class="card-body">
                                    <div id="strategy-comparison-chart" style="height: 350px;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize data
    loadData();
    
    // Handle parameter changes
    document.getElementById('parameters-form').addEventListener('submit', function(e) {
        e.preventDefault();
        loadData();
    });
    
    // Toggle analysis containers based on analysis type
    document.getElementById('analysis-type').addEventListener('change', function() {
        showSelectedAnalysis();
    });
});

function showSelectedAnalysis() {
    const analysisType = document.getElementById('analysis-type').value;
    
    // Hide all analysis containers
    document.querySelectorAll('.analysis-container').forEach(container => {
        container.classList.add('d-none');
    });
    
    // Show selected analysis
    if (analysisType === 'uhi-profile') {
        document.getElementById('uhi-profile-container').classList.remove('d-none');
    } else if (analysisType === 'uhi-intensity') {
        document.getElementById('uhi-intensity-container').classList.remove('d-none');
    } else if (analysisType === 'landcover-impact') {
        document.getElementById('landcover-impact-container').classList.remove('d-none');
    } else if (analysisType === 'mitigation-strategies') {
        document.getElementById('mitigation-strategies-container').classList.remove('d-none');
    }
}

function loadData() {
    const analysisType = document.getElementById('analysis-type').value;
    showSelectedAnalysis();
    
    if (analysisType === 'uhi-profile') {
        loadUHIProfile();
    } else if (analysisType === 'uhi-intensity') {
        loadUHIIntensity();
    } else if (analysisType === 'landcover-impact') {
        loadLandCoverImpact();
    } else if (analysisType === 'mitigation-strategies') {
        loadMitigationStrategies();
    }
}

function loadUHIProfile() {
    const city = document.getElementById('city').value;
    const year = document.getElementById('year').value;
    const month = document.getElementById('month').value;
    const timeOfDay = document.querySelector('input[name="time_of_day"]:checked').value;
    
    // Create a sample map with UHI visualization
    // In a real application, this would fetch an actual UHI map from the server
    const mapHTML = `
        <div style="position: relative; height: 100%; background-color: #f8f9fa; border-radius: 5px; overflow: hidden;">
            <div style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: radial-gradient(circle at center, rgba(255,0,0,0.7) 0%, rgba(255,165,0,0.7) 25%, rgba(255,255,0,0.6) 50%, rgba(144,238,144,0.5) 75%, rgba(0,128,0,0.4) 100%);">
            </div>
            <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center; color: #333; font-weight: bold; background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 5px;">
                Urban Heat Island Visualization for ${city} (${month}/${year} - ${timeOfDay})<br>
                <small>This is a placeholder for the actual UHI map</small>
            </div>
            <div style="position: absolute; bottom: 20px; right: 20px; background-color: white; padding: 10px; border-radius: 5px;">
                <div style="display: flex; align-items: center;">
                    <div style="width: 200px; height: 20px; background: linear-gradient(to right, #006400, #90ee90, #ffff00, #ffa500, #ff0000);"></div>
                </div>
                <div style="display: flex; justify-content: space-between;">
                    <span>-2째C</span>
                    <span>0째C</span>
                    <span>+2째C</span>
                    <span>+4째C</span>
                    <span>+6째C</span>
                </div>
                <div style="text-align: center; font-size: 12px;">Temperature Difference from Rural Average</div>
            </div>
        </div>
    `;
    
    document.getElementById('uhi-map-container').innerHTML = mapHTML;
    
    // Load urban-rural temperature gradient chart
    const distances = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20];
    
    // Generate temperature differences based on distance from city center
    // These would come from actual data in a real application
    let tempDiffs;
    if (city === 'Chennai') {
        tempDiffs = [4.2, 3.7, 3.3, 2.8, 2.1, 1.5, 1.0, 0.6, 0.3, 0.1, 0];
    } else if (city === 'Coimbatore') {
        tempDiffs = [3.5, 3.2, 2.9, 2.4, 1.9, 1.4, 0.9, 0.5, 0.2, 0.1, 0];
    } else if (city === 'Madurai') {
        tempDiffs = [3.8, 3.4, 3.1, 2.6, 2.0, 1.6, 1.1, 0.7, 0.4, 0.2, 0];
    } else {
        // Default gradient profile
        tempDiffs = [3.0, 2.7, 2.4, 2.0, 1.6, 1.2, 0.8, 0.5, 0.3, 0.1, 0];
    }
    
    const trace = {
        x: distances,
        y: tempDiffs,
        type: 'scatter',
        mode: 'lines+markers',
        name: 'Temperature Difference',
        line: {
            color: '#FF5722',
            width: 3
        },
        marker: {
            size: 8,
            color: tempDiffs.map(diff => {
                if (diff > 3) return 'red';
                if (diff > 2) return 'orange';
                if (diff > 1) return 'yellow';
                if (diff > 0.5) return 'lightgreen';
                return 'green';
            })
        }
    };
    
    const layout = {
        title: `Urban-Rural Temperature Gradient for ${city}`,
        xaxis: {
            title: 'Distance from City Center (km)',
            zeroline: false
        },
        yaxis: {
            title: 'Temperature Difference (째C)',
            zeroline: true
        },
        height: 350,
        shapes: [
            {
                type: 'rect',
                xref: 'paper',
                yref: 'y',
                x0: 0,
                y0: 0,
                x1: 1,
                y1: 0.5,
                fillcolor: 'rgba(144, 238, 144, 0.3)',
                line: {
                    width: 0
                }
            },
            {
                type: 'rect',
                xref: 'paper',
                yref: 'y',
                x0: 0,
                y0: 0.5,
                x1: 1,
                y1: 2,
                fillcolor: 'rgba(255, 255, 0, 0.3)',
                line: {
                    width: 0
                }
            },
            {
                type: 'rect',
                xref: 'paper',
                yref: 'y',
                x0: 0,
                y0: 2,
                x1: 1,
                y1: 4,
                fillcolor: 'rgba(255, 165, 0, 0.3)',
                line: {
                    width: 0
                }
            },
            {
                type: 'rect',
                xref: 'paper',
                yref: 'y',
                x0: 0,
                y0: 4,
                x1: 1,
                y1: 6,
                fillcolor: 'rgba(255, 0, 0, 0.3)',
                line: {
                    width: 0
                }
            }
        ],
        annotations: [
            {
                x: 18,
                y: 0.25,
                text: 'Weak UHI',
                showarrow: false,
                font: {
                    color: 'green'
                }
            },
            {
                x: 18,
                y: 1.25,
                text: 'Moderate UHI',
                showarrow: false,
                font: {
                    color: 'darkgreen'
                }
            },
            {
                x: 18,
                y: 3,
                text: 'Strong UHI',
                showarrow: false,
                font: {
                    color: 'darkred'
                }
            },
            {
                x: 18,
                y: 5,
                text: 'Very Strong UHI',
                showarrow: false,
                font: {
                    color: 'darkred'
                }
            }
        ]
    };
    
    Plotly.newPlot('gradient-chart', [trace], layout);
    
    // Update UHI intensity
    const maxDiff = Math.max(...tempDiffs);
    document.getElementById('uhi-intensity').textContent = `${maxDiff.toFixed(1)}째C`;
    
    // Update UHI category
    let category, colorClass;
    if (maxDiff > 4) {
        category = 'Strong';
        colorClass = 'bg-danger';
    } else if (maxDiff > 2) {
        category = 'Moderate';
        colorClass = 'bg-warning';
    } else {
        category = 'Weak';
        colorClass = 'bg-success';
    }
    
    const categoryElement = document.getElementById('uhi-category');
    categoryElement.textContent = category;
    categoryElement.className = 'badge rounded-pill ' + colorClass;
    
    // Update characteristics based on city
    let characteristics;
    if (city === 'Chennai') {
        characteristics = [
            'Highest intensity in central business district',
            'Coastal influence moderates UHI at eastern edges',
            'Industrial zones show high temperatures',
            'Stronger nighttime effect (4.2째C) than daytime (3.1째C)',
            'Seasonal variation with monsoon moderating effect'
        ];
    } else if (city === 'Coimbatore') {
        characteristics = [
            'Moderate UHI effect (3.5째C maximum)',
            'Industrial clusters show elevated temperatures',
            'Western hill influence creates temperature gradient',
            'City center and commercial areas show highest intensity',
            'Urban parks create significant cooling islands'
        ];
    } else if (city === 'Madurai') {
        characteristics = [
            'Strong UHI effect (3.8째C maximum)',
            'Ancient city center shows elevated temperatures',
            'Temple complex creates a unique thermal pattern',
            'Older neighborhoods have higher intensity than newer areas',
            'Significant day-night temperature difference'
        ];
    } else {
        characteristics = [
            'Peak intensity in high-density commercial areas',
            'Stronger intensity during nighttime compared to daytime',
            'Local geographic features influence temperature patterns',
            'Industrial zones exhibit elevated temperatures',
            'Urban parks create localized cooling islands'
        ];
    }
    
    document.getElementById('uhi-characteristics').innerHTML = 
        characteristics.map(item => `<li>${item}</li>`).join('');
}

function loadUHIIntensity() {
    const city = document.getElementById('city').value;
    
    // Load temporal intensity chart (monthly variation)
    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    
    // Generate UHI intensity values based on month
    // These would come from actual data in a real application
    let daytimeUHI, nighttimeUHI;
    
    if (city === 'Chennai') {
        daytimeUHI = [2.1, 2.3, 2.8, 3.1, 3.4, 3.2, 2.9, 2.7, 2.5, 2.3, 2.0, 1.9];
        nighttimeUHI = [2.9, 3.1, 3.6, 4.2, 4.5, 4.3, 3.9, 3.7, 3.5, 3.3, 3.0, 2.8];
    } else if (city === 'Coimbatore') {
        daytimeUHI = [1.8, 2.0, 2.5, 2.8, 3.0, 2.8, 2.5, 2.3, 2.2, 2.0, 1.8, 1.7];
        nighttimeUHI = [2.5, 2.7, 3.1, 3.5, 3.8, 3.6, 3.2, 3.0, 2.8, 2.6, 2.4, 2.3];
    } else {
        daytimeUHI = [2.0, 2.2, 2.6, 2.9, 3.2, 3.0, 2.7, 2.5, 2.3, 2.2, 1.9, 1.8];
        nighttimeUHI = [2.7, 2.9, 3.3, 3.8, 4.1, 3.9, 3.5, 3.3, 3.1, 2.9, 2.6, 2.5];
    }
    
    const trace1 = {
        x: months,
        y: daytimeUHI,
        type: 'scatter',
        mode: 'lines+markers',
        name: 'Daytime UHI',
        line: {
            color: '#FF9800',
            width: 3
        },
        marker: {
            size: 8
        }
    };
    
    const trace2 = {
        x: months,
        y: nighttimeUHI,
        type: 'scatter',
        mode: 'lines+markers',
        name: 'Nighttime UHI',
        line: {
            color: '#3F51B5',
            width: 3
        },
        marker: {
            size: 8
        }
    };
    
    const layout = {
        title: `Monthly UHI Intensity Variation for ${city}`,
        xaxis: {
            title: 'Month'
        },
        yaxis: {
            title: 'UHI Intensity (째C)',
            range: [1.5, 5]
        },
        height: 400,
        legend: {
            x: 0.01,
            y: 0.99
        }
    };
    
    Plotly.newPlot('temporal-intensity-chart', [trace1, trace2], layout);
    
    // Load diurnal pattern chart
    const hours = [0, 3, 6, 9, 12, 15, 18, 21, 24];
    
    // Generate diurnal pattern data (values peaked after sunset)
    let diurnalUHI;
    if (city === 'Chennai') {
        diurnalUHI = [4.1, 3.9, 3.3, 2.5, 2.1, 2.6, 3.5, 4.3, 4.1];
    } else if (city === 'Coimbatore') {
        diurnalUHI = [3.4, 3.2, 2.7, 2.1, 1.8, 2.2, 2.9, 3.5, 3.4];
    } else {
        diurnalUHI = [3.7, 3.5, 3.0, 2.3, 2.0, 2.4, 3.1, 3.8, 3.7];
    }
    
    const diurnalTrace = {
        x: hours,
        y: diurnalUHI,
        type: 'scatter',
        mode: 'lines+markers',
        fill: 'tozeroy',
        fillcolor: 'rgba(63, 81, 181, 0.2)',
        line: {
            color: '#3F51B5',
            width: 3
        },
        marker: {
            size: 8
        }
    };
    
    const diurnalLayout = {
        title: '24-Hour UHI Variation',
        xaxis: {
            title: 'Hour of Day',
            tickvals: [0, 6, 12, 18, 24],
            ticktext: ['00:00', '06:00', '12:00', '18:00', '24:00']
        },
        yaxis: {
            title: 'UHI Intensity (째C)'
        },
        height: 250,
        margin: {
            l: 50, r: 30, t: 50, b: 50
        },
        annotations: [
            {
                x: 21,
                y: Math.max(...diurnalUHI),
                text: 'Peak',
                showarrow: true,
                arrowhead: 2,
                ax: 0,
                ay: -30
            },
            {
                x: 12,
                y: Math.min(...diurnalUHI),
                text: 'Minimum',
                showarrow: true,
                arrowhead: 2,
                ax: 0,
                ay: 30
            }
        ]
    };
    
    Plotly.newPlot('diurnal-chart', [diurnalTrace], diurnalLayout);
    
    // Load seasonal intensity chart
    const seasons = ['Winter', 'Spring', 'Summer', 'Monsoon', 'Post-Monsoon'];
    
    // Generate seasonal pattern data
    let seasonalUHI;
    if (city === 'Chennai') {
        seasonalUHI = [2.4, 3.0, 3.7, 2.7, 2.2];
    } else if (city === 'Coimbatore') {
        seasonalUHI = [1.9, 2.6, 3.1, 2.3, 1.9];
    } else {
        seasonalUHI = [2.1, 2.8, 3.4, 2.5, 2.0];
    }
    
    const seasonalTrace = {
        x: seasons,
        y: seasonalUHI,
        type: 'bar',
        marker: {
            color: ['#90CAF9', '#FFCC80', '#EF5350', '#66BB6A', '#8D6E63'],
            line: {
                color: '#333',
                width: 1
            }
        }
    };
    
    const seasonalLayout = {
        title: 'Seasonal UHI Variation',
        xaxis: {
            title: 'Season'
        },
        yaxis: {
            title: 'UHI Intensity (째C)'
        },
        height: 250,
        margin: {
            l: 50, r: 30, t: 50, b: 50
        }
    };
    
    Plotly.newPlot('seasonal-intensity-chart', [seasonalTrace], seasonalLayout);
}

function loadLandCoverImpact() {
    const city = document.getElementById('city').value;
    
    // Land cover types
    const landCoverTypes = [
        'Dense Urban',
        'Low-Density Urban',
        'Industrial',
        'Commercial',
        'Residential',
        'Mixed Use',
        'Parks/Green Space',
        'Water Bodies',
        'Barren Land'
    ];
    
    // Generate temperature data by land cover type
    // These would come from actual data in a real application
    let tempByLandCover;
    if (city === 'Chennai') {
        tempByLandCover = [35.2, 33.8, 36.1, 34.9, 33.2, 33.6, 30.4, 29.2, 34.1];
    } else if (city === 'Coimbatore') {
        tempByLandCover = [33.8, 32.5, 34.6, 33.7, 32.0, 32.4, 29.6, 28.8, 32.8];
    } else {
        tempByLandCover = [34.5, 33.1, 35.2, 34.2, 32.6, 32.9, 30.0, 29.0, 33.5];
    }
    
    const trace = {
        x: landCoverTypes,
        y: tempByLandCover,
        type: 'bar',
        marker: {
            color: tempByLandCover,
            colorscale: 'RdYlBu_r'
        }
    };
    
    const layout = {
        title: `Land Surface Temperature by Land Cover Type in ${city}`,
        xaxis: {
            title: 'Land Cover Type',
            tickangle: -45
        },
        yaxis: {
            title: 'Temperature (째C)'
        },
        height: 400
    };
    
    Plotly.newPlot('landcover-temp-chart', [trace], layout);
    
    // Load land cover correlation chart
    const landCoverPercent = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];
    
    // Generate correlation data
    // These would come from actual data in a real application
    const vegTempCorrelation = landCoverPercent.map(p => 36 - p*0.07 + (Math.random() * 0.5 - 0.25));
    const imperviousTempCorrelation = landCoverPercent.map(p => 29 + p*0.07 + (Math.random() * 0.5 - 0.25));
    
    const trace1 = {
        x: landCoverPercent,
        y: vegTempCorrelation,
        type: 'scatter',
        mode: 'markers',
        name: 'Vegetation Cover',
        marker: {
            color: 'green',
            size: 10
        }
    };
    
    const trace2 = {
        x: landCoverPercent,
        y: imperviousTempCorrelation,
        type: 'scatter',
        mode: 'markers',
        name: 'Impervious Surface',
        marker: {
            color: 'red',
            size: 10
        }
    };
    
    // Add trend lines
    const vegFit = {
        x: [0, 100],
        y: [36, 29],
        type: 'scatter',
        mode: 'lines',
        name: 'Vegetation Trend',
        line: {
            color: 'green',
            dash: 'dash'
        }
    };
    
    const impFit = {
        x: [0, 100],
        y: [29, 36],
        type: 'scatter',
        mode: 'lines',
        name: 'Impervious Trend',
        line: {
            color: 'red',
            dash: 'dash'
        }
    };
    
    const corrLayout = {
        title: 'Temperature vs. Land Cover Percentage',
        xaxis: {
            title: 'Land Cover Percentage (%)'
        },
        yaxis: {
            title: 'Temperature (째C)',
            range: [28, 37]
        },
        height: 300,
        margin: {
            l: 50, r: 30, t: 50, b: 50
        },
        legend: {
            x: 0.01,
            y: 0.99
        },
        annotations: [
            {
                x: 75,
                y: 30.5,
                text: 'R짼 = 0.89',
                showarrow: false,
                font: {
                    color: 'green'
                }
            },
            {
                x: 75,
                y: 34.5,
                text: 'R짼 = 0.91',
                showarrow: false,
                font: {
                    color: 'red'
                }
            }
        ]
    };
    
    Plotly.newPlot('landcover-correlation-chart', [trace1, trace2, vegFit, impFit], corrLayout);
}

function loadMitigationStrategies() {
    const city = document.getElementById('city').value;
    
    // Update city-specific recommendations
    let recommendations;
    if (city === 'Chennai') {
        recommendations = `Based on the analysis of Chennai's urban heat island profile, 
            the following mitigation strategies are recommended considering its coastal location, 
            high density, industrial zones, and warm and humid climate.`;
    } else if (city === 'Coimbatore') {
        recommendations = `Based on the analysis of Coimbatore's urban heat island profile, 
            the following mitigation strategies are recommended considering its location near the 
            Western Ghats, industrial character, and moderate climate.`;
    } else if (city === 'Madurai') {
        recommendations = `Based on the analysis of Madurai's urban heat island profile, 
            the following mitigation strategies are recommended considering its historic urban core, 
            compact development pattern, and hot climate.`;
    } else {
        recommendations = `Based on the analysis of ${city}'s urban heat island profile, 
            the following mitigation strategies are recommended to reduce urban heat and improve 
            thermal comfort for residents.`;
    }
    
    document.getElementById('city-specific-recommendations').textContent = recommendations;
    
    // Load strategy comparison chart
    const strategies = [
        'Urban Forestry',
        'Green Roofs',
        'Cool Pavements',
        'Cool Roofs',
        'Water Features',
        'Urban Design',
        'Green Infrastructure',
        'Permeable Surfaces'
    ];
    
    // Generate cooling potential data
    // These would come from actual data in a real application
    let coolingPotential;
    if (city === 'Chennai') {
        coolingPotential = [2.3, 1.6, 1.9, 2.1, 2.5, 1.4, 2.0, 1.7];
    } else if (city === 'Coimbatore') {
        coolingPotential = [2.5, 1.8, 2.0, 2.2, 2.2, 1.5, 2.1, 1.9];
    } else {
        coolingPotential = [2.1, 1.7, 1.8, 1.9, 2.3, 1.3, 1.8, 1.6];
    }
    
    // Generate cost estimates (1-10 scale)
    const costEstimates = [6, 8, 7, 5, 9, 4, 7, 6];
    
    // Generate implementation difficulty (1-10 scale)
    const implementDifficulty = [5, 7, 6, 4, 8, 9, 6, 5];
    
    // Generate co-benefits score (1-10 scale)
    const coBenefits = [9, 7, 5, 4, 8, 6, 9, 7];
    
    const trace1 = {
        x: strategies,
        y: coolingPotential,
        type: 'bar',
        name: 'Cooling Potential (째C)',
        marker: {
            color: '#2196F3'
        }
    };
    
    const trace2 = {
        x: strategies,
        y: costEstimates.map(v => v/10*3),
        type: 'scatter',
        mode: 'markers',
        name: 'Cost (0-3)',
        yaxis: 'y2',
        marker: {
            color: '#F44336',
            size: 12,
            symbol: 'square'
        }
    };
    
    const trace3 = {
        x: strategies,
        y: coBenefits.map(v => v/10*3),
        type: 'scatter',
        mode: 'markers',
        name: 'Co-Benefits (0-3)',
        yaxis: 'y2',
        marker: {
            color: '#4CAF50',
            size: 12,
            symbol: 'diamond'
        }
    };
    
    const layout = {
        title: `Cooling Potential by Mitigation Strategy for ${city}`,
        xaxis: {
            title: 'Mitigation Strategy',
            tickangle: -45
        },
        yaxis: {
            title: 'Cooling Potential (째C)',
            side: 'left',
            range: [0, 3]
        },
        yaxis2: {
            title: 'Score (0-3)',
            overlaying: 'y',
            side: 'right',
            range: [0, 3],
            showgrid: false
        },
        height: 350,
        margin: {
            l: 50, r: 50, b: 100, t: 50
        },
        legend: {
            x: 0.05,
            y: 1
        }
    };
    
    Plotly.newPlot('strategy-comparison-chart', [trace1, trace2, trace3], layout);
}
</script>
{% endblock %}
